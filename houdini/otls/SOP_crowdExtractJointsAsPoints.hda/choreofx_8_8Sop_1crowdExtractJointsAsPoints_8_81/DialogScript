# Dialog script for choreofx::crowdExtractJointsAsPoints::1 automatically generated

{
    name	choreofx::crowdExtractJointsAsPoints::1
    script	choreofx::crowdExtractJointsAsPoints::1
    label	"Crowd Extract Joints as Points"

    help {
	""
    }

    inputlabel	1	"Agent Primitives"
    inputlabel	2	"Sub-Network Input #2"
    inputlabel	3	"Sub-Network Input #3"
    inputlabel	4	"Sub-Network Input #4"
    outputlabel	1	"Joint Points"

    parm {
        name    "group"
        label   "Agent Group"
        type    string
        default { "" }
        menutoggle {
            [ "kwargs['node'].generateInputGroupMenu(0)" ]
            language python
        }
        range   { 0 1 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_action" "import soputils\nkwargs['geometrytype'] = kwargs['node'].parmTuple('grouptype')\nkwargs['inputindex'] = 0\nsoputils.selectGroupParm(kwargs)" }
        parmtag { "script_action_help" "Select geometry from an available viewport." }
        parmtag { "script_action_icon" "BUTTONS_reselect" }
    }
    parm {
        name    "grouptype"
        label   "Group Type"
        type    ordinal
        default { "prims" }
        menu {
            "guess"     "Guess from Group"
            "vertices"  "Vertices"
            "edges"     "Edges"
            "points"    "Points"
            "prims"     "Primitives"
        }
        range   { 0 1 }
        parmtag { "autoscope" "0000000000000000" }
    }
    parm {
        name    "sepparm2"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "agent_id_attrib"
        label   "Agent ID attrib"
        type    string
        default { "agentId" }
        menureplace {
            [ "opmenu -l -a attribmenu ptdel" ]
        }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm4"
        label   "Separator"
        type    separator
        default { "" }
    }
    groupsimple {
        name    "folder0"
        label   "Agent Skeleton to match Joint Names"

        parm {
            name    "skel_search_prim"
            label   "Skel Prim"
            type    integer
            default { "0" }
            disablewhen "{ useagentname == 1 }"
            range   { 0 100 }
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "useagentname"
            label   "Find prim with agentname"
            type    toggle
            default { "0" }
            parmtag { "script_callback_language" "python" }
        }
        parm {
            name    "agentname"
            label   "agentname"
            type    string
            default { "horse" }
            help    "find a point with an agentname point attribute that matches this string"
            disablewhen "{ useagentname == 0 }"
            parmtag { "script_callback_language" "python" }
        }
    }

    parm {
        name    "sepparm"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "transformname"
        label   "Transform Name"
        type    string
        default { "LeftFingerBase_To_LeftHandIndex1 RightFingerBase_To_RightHandIndex1" }
        menutoggle {
            [ "opmenu -l -a build_bone_list transformname" ]
        }
        range   { 0 1 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_action" "import crowdstoolutils\ncrowdstoolutils.selectJoint(kwargs['node'], kwargs['parmtuple'], 0)" }
        parmtag { "script_action_help" "Select a joint name from a tree view." }
        parmtag { "script_action_icon" "BUTTONS_reselect" }
    }
    parm {
        name    "extractmethod"
        label   "Extract Method"
        type    integer
        default { "0" }
        menu {
            "0" "add new points"
            "1" "clone joint points"
        }
        range   { 0! 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm3"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "extractframe"
        label   "Extract Frame"
        type    integer
        default { "1" }
        range   { 0 100 }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "animated"
        label   "Animated"
        type    toggle
        default { "off" }
        range   { 0! 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
}
