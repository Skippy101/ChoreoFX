MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = choreofx::crowdClipPlayer::1
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 36.1669 -24.6052
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author stephen@stephen-m2
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"wirestyle":{
		"type":"string",
		"value":"rounded"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.inp"
Content-Type: text/plain

1
0 1.5512738755217892 18.708272283296616 2 0 __NO_OWNER_NETWORK_BOX__ "RGB 0.47499999403953552 0.81199997663497925 0.20399999618530273"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.60312 4.01099
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	timeOffset_back_transform 0 1 "input1"
}
inputs
{
0 	timeOffset_back_transform 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "clip"
        label   "Clip"
        type    string
        default { "" }
        menureplace {
            [ "import crowdstoolutils" ]
            [ "return crowdstoolutils.buildClipMenu(hou.pwd())" ]
            language python
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm2"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "removeLocoStart"
        label   "Remove Loco Start Xform"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "advanceLoco"
        label   "Advance Locomotion"
        type    toggle
        default { "1" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm3"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "timeOffetLoco"
        label   "Time Offet Loco"
        type    integer
        default { "0" }
        help    "Locomotive - The locomotion channel will be preserved. For when agent should move in a direction.        In-Place - Locomotion channel loops around to start. For when agent should loop on the spot"
        menu {
            "0" "Back Transform"
            "1" "Back Translate"
            "2" "No Change"
        }
        range   { 0 10 }
        parmtag { "autoscope" "0000000000000000" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "locoType"
        label   "Locomotion Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Point R & T"
            "1" "Joint R, Point T"
            "2" "Joint R & T"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "locoJoint"
        label   "Locomotion Joint"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "newparameter"
        label   "Label"
        type    integer
        default { "0" }
        range   { 0 10 }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion.chn"
Content-Type: text/plain

{
    channel removeLocoStart {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../removeLocoStart\") }
    }
    channel advanceLoco {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../advanceLoco\") }
    }
    channel locoType {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../locoType\") }
    }
    channel locoJoint {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../locoJoint\") }
    }
    channel newparameter {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { options = {	 autoslope  ai ao }

	 length = 2.25 accel = 0.75 0.75 expr = bezier() }
      segment { options = {	 autoslope  ai ao }

	 length = 0 accel = 0.33333333333333331 0.33333333333333331 expr = bezier() }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=1 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"
float cliptime = ((chf(\"../time\") * @timeSpeed) - @timeAnchorSec * @timeSpeed) + @timeOffset;

@time = @Time;
//string clipname = chs(\"clip\");
string clipname = agentclipnames(0, @primnum)[0];
//setagentclipnames(0, @primnum, array(clipname));

// Clip loop attribs
float clipsamplelength = 1.0 / agentclipsamplerate(0, @primnum, clipname);

// I've taken clipsamplelength out for now because it causes frame 0 to be the last frame of the clip
float cliplength = agentcliplength(0, @primnum, clipname) - clipsamplelength;
int loopcount = floor(cliptime / cliplength);


cliptime = cliptime - (loopcount * cliplength);
@cliptime = cliptime;

// Locomotion loop xform
int locoidx = agentrigfind(0, @primnum, \"__locomotion__\");
matrix locoXform = agentclipsampleworld(0, @primnum, clipname, cliptime, locoidx);
matrix locoXform_start = agentclipsampleworld(0, @primnum, clipname, 0, locoidx);
matrix locoXform_end = agentclipsampleworld(0, @primnum, clipname, cliplength, locoidx);
matrix locoXform_loop = invert(locoXform_start) * locoXform_end;

// Apply locomotion loop xform cumulatively
if (chi(\"advanceLoco\") == 1){
    for (int i=0; i < abs(loopcount); i++){
        if (loopcount>0)
            locoXform *= locoXform_loop;
        else
            locoXform *= invert(locoXform_loop);
    }
}
// Cancel out start loco xform to match Agent Clip
if (chi(\"removeLocoStart\")){
    locoXform *= invert(locoXform_start);
}

//matrix locoXformNoOffset = locoXform;

// Apply timeOffset Xform to Locomotion
//matrix timeOffsetXform = point(1, \"offsetLocoXform\", @ptnum);


//vector offset = set(timeOffsetXform.wx, timeOffsetXform.wy, timeOffsetXform.wz);
//offset = cracktransform(0,0,0, {0,0,0}, timeOffsetXform);
//matrix offsetRot = polardecomp((matrix3)timeOffsetXform);
//offset *= offsetRot;

//locoXform *= invert(offsetRot) * timeOffsetXform;


//locoXform *= invert(4@offsetLocoXform);

// Set clip time adjusted for looping
setagentcliptimes(0, @primnum, array(cliptime));

    
if (chi(\"../applyScale\")>0){
    scale(locoXform, @pscale);  
}

// Choose how to split new loco xform between Point and Joint
int locoType = chi(\"locoType\");

if (locoType == 0) // Point R & T
{
    // Account for current agent pos and orient rot
    @P += {0,0,0}  * (locoXform * matrix(qconvert(@orient)));
    //@P -= offset;
    @orient =  qmultiply(@orient, quaternion(matrix3(locoXform)));
}
else
{
    // Find Locomotion Joint
    string locoJoint = chs(\"locoJoint\");
    int xform_idx = agentrigfind(0, @primnum, locoJoint);
    
    // Get Joint xform at new clip time
    matrix xform_joint = agentclipsampleworld(0, @primnum, clipname, cliptime, xform_idx);
    //matrix3 rot = polardecomp((matrix3)xform_joint);
    //matrix3 scale = ((matrix3)xform_joint) * transpose(rot);
    
    // Remove translation so we can rotate xform.
    vector pos = set(xform_joint.wx, xform_joint.wy, xform_joint.wz);
    translate(xform_joint, -pos); 
    
    // Apply Locomotion rot to Joint
    xform_joint *= polardecomp((matrix3)locoXform);

    if (locoType == 1) // Point R, Joint T
    {
        @P += {0,0,0} * (locoXform * matrix(qconvert(@orient)));
    }
    else // Joint R & T
    {
        pos += {0,0,0} * locoXform;
    }
    
    // Translate Joint and apply xform
    translate(xform_joint, pos);
    
    setagentworldtransform(0, @primnum, xform_joint, xform_idx);
}

@cliplength = cliplength;
@clipTimeTotal = cliptime + (loopcount * cliplength);
@clipsamplelength = clipsamplelength;
i@loopcount = loopcount;
//@cliptime = cliptime;

"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
folder1	[ 0	locks=0	autoscope=0 ]	(	0	0	)
clip	[ 0	locks=0	autoscope=0 ]	(	test	)
sepparm2	[ 0	locks=0 ]	(	)
removeLocoStart	[ 0	locks=0	autoscope=0 ]	(	[ removeLocoStart	1 ] 	)
advanceLoco	[ 0	locks=0	autoscope=0 ]	(	[ advanceLoco	1 ] 	)
sepparm3	[ 0	locks=0 ]	(	)
timeOffetLoco	[ 0	locks=0	autoscope=0 ]	(	0	)
sepparm	[ 0	locks=0 ]	(	)
locoType	[ 0	locks=0	autoscope=0 ]	(	[ locoType	0 ] 	)
locoJoint	[ 0	locks=0	autoscope=0 ]	(	[ locoJoint	Hips ] 	)
newparameter	[ 0	locks=0	autoscope=1 ]	(	[ newparameter	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_inplace.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_inplace.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.0921733 4.01099
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	time_Init 0 1 "input1"
}
inputs
{
0 	time_Init 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_inplace.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "clip"
        label   "Clip"
        type    string
        default { "" }
        menureplace {
            [ "import crowdstoolutils" ]
            [ "return crowdstoolutils.buildClipMenu(hou.pwd())" ]
            language python
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm2"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "removeLocoStart"
        label   "Remove Loco Start Xform"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "locoType"
        label   "Locomotion Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Point R & T"
            "1" "Joint R, Point T"
            "2" "Joint R & T"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "locoJoint"
        label   "Locomotion Joint"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_inplace.chn"
Content-Type: text/plain

{
    channel removeLocoStart {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../removeLocoStart\") }
    }
    channel locoType {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../locoType\") }
    }
    channel locoJoint {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../locoJoint\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_inplace.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"float cliptime = ((chf(\"../time\") * @timeSpeed) - @timeAnchorSec * @timeSpeed) + @timeOffset;
//string clipname = chs(\"clip\");
string clipname = agentclipnames(0, @primnum)[0];
//setagentclipnames(0, @primnum, array(clipname));

// Clip loop attribs
float clipsamplelength = 1.0 / agentclipsamplerate(0, @primnum, clipname);
float cliplength = agentcliplength(0, @primnum, clipname) - clipsamplelength;
int loopcount = floor(cliptime / cliplength);

// Skip last frame on every loop (Looping clips should have same start and end)
cliptime = cliptime - (loopcount * cliplength);
//cliptime = cliptime % (cliplength); // inconsistent

// Set clip time adjusted for looping
setagentcliptimes(0, @primnum, array(cliptime));

@cliplength = cliplength;
@clipsamplelength = clipsamplelength;
@clipTimeTotal = cliptime + (loopcount * cliplength);
i@loopcount = loopcount;
@cliptime = cliptime;

"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
folder1	[ 0	locks=0	autoscope=0 ]	(	0	0	)
clip	[ 0	locks=0	autoscope=0 ]	(	test	)
sepparm2	[ 0	locks=0 ]	(	)
removeLocoStart	[ 0	locks=0	autoscope=0 ]	(	[ removeLocoStart	1 ] 	)
sepparm	[ 0	locks=0 ]	(	)
locoType	[ 0	locks=0	autoscope=0 ]	(	[ locoType	0 ] 	)
locoJoint	[ 0	locks=0	autoscope=0 ]	(	[ locoJoint	Hips ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_inplace.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/vis_anchor.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/vis_anchor.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.10198 1.06998
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_do_locomotion 2 1 "input1"
}
inputs
{
0 	switch_do_locomotion 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/vis_anchor.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"float testTime = (@clipTimeTotal + (@timeAnchorSec + $TSTART) - @timeOffset) / @TimeInc + 1;
@testTime = testTime;
if (abs(floor(@timeAnchor) - @testTime) < 0.001){
    @Cd = {1,0,0};
}"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/vis_anchor.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeOffset_back_transform.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeOffset_back_transform.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.60312 5.73979
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	pscale_compensation 0 1 "input1"
}
inputs
{
0 	pscale_compensation 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeOffset_back_transform.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "clip"
        label   "Clip"
        type    string
        default { "" }
        menureplace {
            [ "import crowdstoolutils" ]
            [ "return crowdstoolutils.buildClipMenu(hou.pwd())" ]
            language python
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm2"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "removeLocoStart"
        label   "Remove Loco Start Xform"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "advanceLoco"
        label   "Advance Locomotion"
        type    toggle
        default { "1" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "locoType"
        label   "Locomotion Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Point R & T"
            "1" "Joint R, Point T"
            "2" "Joint R & T"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "locoJoint"
        label   "Locomotion Joint"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeOffset_back_transform.chn"
Content-Type: text/plain

{
    channel removeLocoStart {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../removeLocoStart\") }
    }
    channel advanceLoco {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../advanceLoco\") }
    }
    channel locoType {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../locoType\") }
    }
    channel locoJoint {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../locoJoint\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeOffset_back_transform.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"string clipname = agentclipnames(0, @primnum)[0];
float timeOffset = @timeOffset;

// Clip loop attribs
float clipsamplelength = 1.0 / agentclipsamplerate(0, @primnum, clipname);
float cliplength = agentcliplength(0, @primnum, clipname) - clipsamplelength;

// Locomotion loop xform
int locoidx = agentrigfind(0, @primnum, \"__locomotion__\");
matrix locoXform_start = agentclipsampleworld(0, @primnum, clipname, 0, locoidx);
matrix locoXform_end = agentclipsampleworld(0, @primnum, clipname, cliplength, locoidx);
matrix locoXform_loop = invert(locoXform_start) * locoXform_end;

// time Offset adjustment
int offsetLoopCount = floor(timeOffset / cliplength);
float offsetLocoTime = timeOffset - (offsetLoopCount * cliplength);
matrix offsetLocoXform = agentclipsampleworld(0, @primnum, clipname, offsetLocoTime, locoidx);

// Apply locomotion loop xform cumulatively to offset xform
if (chi(\"advanceLoco\") == 1){
    for (int i=0; i < abs(offsetLoopCount); i++){
        if (offsetLoopCount>0)
            offsetLocoXform *= locoXform_loop;
        else
            offsetLocoXform *= invert(locoXform_loop);
    }
}

// Cancel out start loco xform on Anchor
offsetLocoXform *= invert(locoXform_start);

//4@offsetLocoXform = offsetLocoXform;

offsetLocoXform = invert(offsetLocoXform);

if (chi(\"../applyScale\")>0){
    scale(offsetLocoXform, @pscale);  
}

// Account for current agent pos and orient rot
@P += {0,0,0}  * (offsetLocoXform * matrix(qconvert(@orient)));
//@orient = qmultiply(@orient, quaternion(matrix3(offsetLocoXform)));

"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
folder1	[ 0	locks=0	autoscope=0 ]	(	0	0	)
clip	[ 0	locks=0	autoscope=0 ]	(	test	)
sepparm2	[ 0	locks=0 ]	(	)
removeLocoStart	[ 0	locks=0	autoscope=0 ]	(	[ removeLocoStart	1 ] 	)
advanceLoco	[ 0	locks=0	autoscope=0 ]	(	[ advanceLoco	1 ] 	)
sepparm	[ 0	locks=0 ]	(	)
locoType	[ 0	locks=0	autoscope=0 ]	(	[ locoType	0 ] 	)
locoJoint	[ 0	locks=0	autoscope=0 ]	(	[ locoJoint	Hips ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeOffset_back_transform.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 9.31566 8.18941
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	color1 0 1 "input1"
}
inputs
{
0 	color1 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "clip"
        label   "Clip"
        type    string
        default { "" }
        menureplace {
            [ "import crowdstoolutils" ]
            [ "return crowdstoolutils.buildClipMenu(hou.pwd())" ]
            language python
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm2"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "removeLocoStart"
        label   "Remove Loco Start Xform"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "advanceLoco"
        label   "Advance Locomotion"
        type    toggle
        default { "1" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "locoType"
        label   "Locomotion Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Point R & T"
            "1" "Joint R, Point T"
            "2" "Joint R & T"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "locoJoint"
        label   "Locomotion Joint"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion1.chn"
Content-Type: text/plain

{
    channel removeLocoStart {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../removeLocoStart\") }
    }
    channel advanceLoco {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../advanceLoco\") }
    }
    channel locoType {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../locoType\") }
    }
    channel locoJoint {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../locoJoint\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"float cliptime = @Time;

@time = @Time;
//string clipname = chs(\"clip\");
string clipname = agentclipnames(0, @primnum)[0];
//setagentclipnames(0, @primnum, array(clipname));

// Clip loop attribs
float clipsamplelength = 1.0 / agentclipsamplerate(0, @primnum, clipname);
float cliplength = agentcliplength(0, @primnum, clipname) - clipsamplelength;
int loopcount = floor(cliptime / cliplength);

cliptime = cliptime - (loopcount * cliplength);
@cliptime = cliptime;

// Locomotion loop xform
int locoidx = agentrigfind(0, @primnum, \"__locomotion__\");
matrix locoXform = agentclipsampleworld(0, @primnum, clipname, cliptime, locoidx);
matrix locoXform_start = agentclipsampleworld(0, @primnum, clipname, 0, locoidx);
matrix locoXform_end = agentclipsampleworld(0, @primnum, clipname, cliplength, locoidx);
matrix locoXform_loop = invert(locoXform_start) * locoXform_end;

// Apply locomotion loop xform cumulatively
if (chi(\"advanceLoco\") == 1){
    for (int i=0; i < abs(loopcount); i++){
        if (loopcount>0)
            locoXform *= locoXform_loop;
        else
            locoXform *= invert(locoXform_loop);
    }
}
// Cancel out start loco xform to match Agent Clip
if (chi(\"removeLocoStart\")){
    locoXform *= invert(locoXform_start);
}

// Anchor Time adjustment
int anchorLoopCount = floor(@timeAnchorSeconds / cliplength);
float anchorLocoTime = @timeAnchorSeconds - (anchorLoopCount * cliplength);
matrix anchorLocoXform = agentclipsampleworld(0, @primnum, clipname, anchorLocoTime, locoidx);

// Apply locomotion loop xform cumulatively to anchor xform
if (chi(\"advanceLoco\") == 1){
    for (int i=0; i < anchorLoopCount; i++){
        anchorLocoXform *= locoXform_loop;
    }
}
// Cancel out start loco xform on Anchor
anchorLocoXform *= invert(locoXform_start);

// Apply Anchor Time Xform to Locomotion
//locoXform *= invert(anchorLocoXform);

//cliptime -= anchorLocoTime;
// Set clip time adjusted for looping
setagentcliptimes(0, @primnum, array(cliptime));

// Choose how to split new loco xform between Point and Joint
int locoType = chi(\"locoType\");

if (locoType == 0) // Point R & T
{
    // Account for current agent pos and orient rot
    @P += {0,0,0}  * (locoXform * matrix(qconvert(@orient)));
    @orient =  qmultiply(@orient, quaternion(matrix3(locoXform)));
}
else
{
    // Find Locomotion Joint
    string locoJoint = chs(\"locoJoint\");
    int xform_idx = agentrigfind(0, @primnum, locoJoint);
    
    // Get Joint xform at new clip time
    matrix xform_joint = agentclipsampleworld(0, @primnum, clipname, cliptime, xform_idx);
    //matrix3 rot = polardecomp((matrix3)xform_joint);
    //matrix3 scale = ((matrix3)xform_joint) * transpose(rot);
    
    // Remove translation so we can rotate xform.
    vector pos = set(xform_joint.wx, xform_joint.wy, xform_joint.wz);
    translate(xform_joint, -pos); 
    
    // Apply Locomotion rot to Joint
    xform_joint *= polardecomp((matrix3)locoXform);

    if (locoType == 1) // Point R, Joint T
    {
        @P += {0,0,0} * (locoXform * matrix(qconvert(@orient)));
    }
    else // Joint R & T
    {
        pos += {0,0,0} * locoXform;
    }
    
    // Translate Joint and apply xform
    translate(xform_joint, pos);
    setagentworldtransform(0, @primnum, xform_joint, xform_idx);
}

@cliplength = cliplength;
@clipTimeTotal = cliptime + (loopcount * cliplength);
@clipsamplelength = clipsamplelength;
i@loopcount = loopcount;
//@cliptime = cliptime;

"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
folder1	[ 0	locks=0	autoscope=0 ]	(	0	0	)
clip	[ 0	locks=0	autoscope=0 ]	(	test	)
sepparm2	[ 0	locks=0 ]	(	)
removeLocoStart	[ 0	locks=0	autoscope=0 ]	(	[ removeLocoStart	0 ] 	)
advanceLoco	[ 0	locks=0	autoscope=0 ]	(	[ advanceLoco	0 ] 	)
sepparm	[ 0	locks=0 ]	(	)
locoType	[ 0	locks=0	autoscope=0 ]	(	[ locoType	0 ] 	)
locoJoint	[ 0	locks=0	autoscope=0 ]	(	[ locoJoint	"" ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clip_player_locomotion1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.init"
Content-Type: text/plain

type = color
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 9.31676 9.5367
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 1 1 1 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
deleteallcolorattribs	[ 0	locks=0	autoscope=0 ]	(	"off"	)
class	[ 0	locks=0	autoscope=0 ]	(	2	)
colortype	[ 0	locks=0	autoscope=0 ]	(	0	)
color	[ 0	locks=0	autoscope=0 ]	(	0.65400004386901855	1	0.82700002193450928	)
seed	[ 0	locks=0	autoscope=0 ]	(	0	)
rampattribute	[ 0	locks=0	autoscope=0 ]	(	""	)
ramprange	[ 0	locks=0	autoscope=0 ]	(	0	1	)
ramp	[ 0	locks=0	autoscope=0 ]	(	2	)
ramp1pos	[ 0	locks=0	autoscope=0 ]	(	0	)
ramp1c	[ 0	locks=0	autoscope=0 ]	(	0	0	0	)
ramp1interp	[ 0	locks=0	autoscope=0 ]	(	"linear"	)
ramp2pos	[ 0	locks=0	autoscope=0 ]	(	1	)
ramp2c	[ 0	locks=0	autoscope=0 ]	(	1	1	1	)
ramp2interp	[ 0	locks=0	autoscope=0 ]	(	"linear"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/color1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"___toolcount___":{
		"type":"string",
		"value":"2"
	},
	"___toolid___":{
		"type":"string",
		"value":"sop_color"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeAnchor_back_transform1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeAnchor_back_transform1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 7.42235 11.1437
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeAnchor_back_transform1.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "clip"
        label   "Clip"
        type    string
        default { "" }
        menureplace {
            [ "import crowdstoolutils" ]
            [ "return crowdstoolutils.buildClipMenu(hou.pwd())" ]
            language python
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm2"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "removeLocoStart"
        label   "Remove Loco Start Xform"
        type    toggle
        default { "0" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "advanceLoco"
        label   "Advance Locomotion"
        type    toggle
        default { "1" }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "sepparm"
        label   "Separator"
        type    separator
        default { "" }
    }
    parm {
        name    "locoType"
        label   "Locomotion Type"
        type    ordinal
        default { "0" }
        menu {
            "0" "Point R & T"
            "1" "Joint R, Point T"
            "2" "Joint R & T"
        }
        parmtag { "script_callback_language" "python" }
    }
    parm {
        name    "locoJoint"
        label   "Locomotion Joint"
        type    string
        default { "" }
        parmtag { "script_callback_language" "python" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeAnchor_back_transform1.chn"
Content-Type: text/plain

{
    channel removeLocoStart {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../removeLocoStart\") }
    }
    channel advanceLoco {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../advanceLoco\") }
    }
    channel locoType {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../locoType\") }
    }
    channel locoJoint {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = chs(\"../locoJoint\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeAnchor_back_transform1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"string clipname = agentclipnames(0, @primnum)[0];

// Clip loop attribs
float clipsamplelength = 1.0 / agentclipsamplerate(0, @primnum, clipname);
float cliplength = agentcliplength(0, @primnum, clipname) - clipsamplelength;

// Locomotion loop xform
int locoidx = agentrigfind(0, @primnum, \"__locomotion__\");
matrix locoXform_start = agentclipsampleworld(0, @primnum, clipname, 0, locoidx);
matrix locoXform_end = agentclipsampleworld(0, @primnum, clipname, cliplength, locoidx);
matrix locoXform_loop = invert(locoXform_start) * locoXform_end;

// Anchor Time adjustment
int anchorLoopCount = floor(@timeAnchorSeconds / cliplength);
float anchorLocoTime = @timeAnchorSeconds - (anchorLoopCount * cliplength);
matrix anchorLocoXform = agentclipsampleworld(0, @primnum, clipname, anchorLocoTime, locoidx);

// Apply locomotion loop xform cumulatively to anchor xform
if (chi(\"advanceLoco\") == 1){
    for (int i=0; i < anchorLoopCount; i++){
        anchorLocoXform *= locoXform_loop;
    }
}

// Cancel out start loco xform on Anchor
anchorLocoXform *= invert(locoXform_start);
anchorLocoXform = invert(anchorLocoXform);

// Set clip time adjusted for looping
setagentcliptimes(0, @primnum, array(anchorLocoTime));

// Choose how to split new loco xform between Point and Joint
int locoType = chi(\"locoType\");

if (locoType == 0) // Point R & T
{
    // Account for current agent pos and orient rot
    @P += {0,0,0}  * (anchorLocoXform * matrix(qconvert(@orient)));
    @orient =  qmultiply(@orient, quaternion(matrix3(anchorLocoXform)));
}
//@cliptime = cliptime;

"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
folder1	[ 0	locks=0	autoscope=0 ]	(	0	0	)
clip	[ 0	locks=0	autoscope=0 ]	(	test	)
sepparm2	[ 0	locks=0 ]	(	)
removeLocoStart	[ 0	locks=0	autoscope=0 ]	(	[ removeLocoStart	0 ] 	)
advanceLoco	[ 0	locks=0	autoscope=0 ]	(	[ advanceLoco	0 ] 	)
sepparm	[ 0	locks=0 ]	(	)
locoType	[ 0	locks=0	autoscope=0 ]	(	[ locoType	0 ] 	)
locoJoint	[ 0	locks=0	autoscope=0 ]	(	[ locoJoint	"" ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/timeAnchor_back_transform1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/time_Init.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/time_Init.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68078 9.26811
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	init_pscale 0 1 "input1"
}
inputs
{
0 	init_pscale 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/time_Init.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"if (!haspointattrib(0, \"timeSpeed\"))
    @timeSpeed = chf(\"../timeSpeed\");
    
if (!haspointattrib(0, \"timeOffset\"))
    @timeOffset = chf(\"../timeOffset\");
    
if (!haspointattrib(0, \"timeAnchor\"))
    @timeAnchor = chf(\"../timeAnchor\");

    
@timeAnchorSec = (@timeAnchor - $FSTART) * @TimeInc;"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/time_Init.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pscale_compensation.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pscale_compensation.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.60312 7.31832
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	time_Init 0 1 "input1"
}
inputs
{
0 	time_Init 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pscale_compensation.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"
if (chi(\"../applyScale\") == 1){
    f@timeSpeed /= @pscale;
    f@timeOffset /= @pscale; 
}"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/pscale_compensation.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_orient.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_orient.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68078 11.6667
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	remove_instrinsic_transform 1 1 "input1"
}
inputs
{
0 	remove_instrinsic_transform 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_orient.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"if (!haspointattrib(0, \"orient\"))
{
    if (!haspointattrib(0, \"up\"))
    {
        @up = {0,1,0};    
    }
    
    if (haspointattrib(0, \"v\"))
    {
        @orient = quaternion(maketransform(normalize(@v), @up));
        @N = normalize(@v);
    }
    else if (haspointattrib(0, \"N\"))
    {
        @orient = quaternion(maketransform(@N, @up)); 
    }
    else
    {
        @N = {0,0,1};
        @orient = quaternion(maketransform(@N, @up));
        
    }
}"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_orient.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_P_orient.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_P_orient.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 2.4365 16.4011
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	(0) "" 1 "input1"
}
inputs
{
0 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_P_orient.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"@orient = {0,0,0,1};
@P = {0,0,0};"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/reset_P_orient.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_pscale.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_pscale.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68078 10.6092
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	init_orient 1 1 "input1"
}
inputs
{
0 	init_orient 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_pscale.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0	autoscope=0 ]	(	0	0	)
group	[ 0	locks=0	autoscope=0 ]	(	""	)
grouptype	[ 0	locks=0	autoscope=0 ]	(	"guess"	)
class	[ 0	locks=0	autoscope=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0	autoscope=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0	autoscope=0 ]	(	1024	)
snippet	[ 0	locks=0	autoscope=0 ]	(	"if (!haspointattrib(0, \"pscale\"))
{
    @pscale = 1;
}"	)
exportlist	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_strict	[ 0	locks=0	autoscope=0 ]	(	"off"	)
autobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
bindings	[ 0	locks=0	autoscope=0 ]	(	0	)
groupautobind	[ 0	locks=0	autoscope=0 ]	(	"on"	)
groupbindings	[ 0	locks=0	autoscope=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0	autoscope=0 ]	(	.	)
vex_outputmask	[ 0	locks=0	autoscope=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0	autoscope=0 ]	(	id	)
vex_inplace	[ 0	locks=0	autoscope=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0	autoscope=0 ]	(	""	)
vex_precision	[ 0	locks=0	autoscope=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/init_pscale.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_instrinsic_transform.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_instrinsic_transform.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68078 13.4533
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch_at_origin 0 1 "input1"
}
inputs
{
0 	switch_at_origin 0 1
}
stat
{
  create -1
  modify -1
  author stephen@stephen-m2
  access 0777
}
color UT_Color RGB 0.89 0.412 0.761 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_instrinsic_transform.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"matrix3 xf = ident();
if (primintrinsic(0, \"transform\", @primnum) == 0){
    setprimintrinsic(0, \"transform\", @primnum, xf);
    warning(\"Detected and removed Intrinsic Transform attribute!\");
}"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/remove_instrinsic_transform.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68187 -3.51642
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	switch_vis_anchorFrame 0 1 "input1"
}
inputs
{
0 	switch_vis_anchorFrame 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0	autoscope=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_locomotion.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_locomotion.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68187 2.62698
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	clip_player_inplace 0 1 "input1"
1 	clip_player_locomotion 1 1 "input2"
}
inputs
{
0 	clip_player_inplace 0 1
1 	clip_player_locomotion 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_locomotion.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../loopTransitionType\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_locomotion.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0	autoscope=0 ]	(	[ input	1 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_do_locomotion.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.init"
Content-Type: text/plain

type = attribdelete
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.09963 0.225501
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	vis_anchor 1 1 "input1"
}
inputs
{
0 	vis_anchor 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.parm"
Content-Type: text/plain

{
version 0.8
usereference	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
doptdel	[ 0	locks=0 ]	(	"on"	)
ptdel	[ 0	locks=0	autoscope=0 ]	(	offsetLocoXform	)
dovtxdel	[ 0	locks=0 ]	(	"on"	)
vtxdel	[ 0	locks=0	autoscope=0 ]	(	""	)
doprimdel	[ 0	locks=0 ]	(	"on"	)
primdel	[ 0	locks=0	autoscope=0 ]	(	""	)
dodtldel	[ 0	locks=0 ]	(	"on"	)
dtldel	[ 0	locks=0	autoscope=0 ]	(	""	)
updatevar	[ 0	locks=0	autoscope=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribdelete1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_at_origin.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_at_origin.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68188 15.1886
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
2 	(0) "" 1 "input1"
1 	reset_P_orient 0 1 "input2"
}
inputs
{
0 	(0) 0 1
1 	reset_P_orient 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_at_origin.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      start = -2.125
      segment { length = 0 expr = ch(\"../playAtOrigin\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_at_origin.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0	autoscope=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_at_origin.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_vis_anchorFrame.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_vis_anchorFrame.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 1.68187 -1.01307
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
1 	switch_do_locomotion 2 1 "input1"
2 	attribdelete1 1 1 "input2"
}
inputs
{
0 	switch_do_locomotion 0 1
1 	attribdelete1 0 1
}
stat
{
  create -1
  modify -1
  author choreofx@choreofx.com
  access 0777
}
color UT_Color RGB 0.8 1 0.7 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_vis_anchorFrame.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      start = -2.125
      segment { length = 0 expr = ch(\"../visAnchorFrame\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_vis_anchorFrame.parm"
Content-Type: text/plain

{
version 0.8
input	[ 0	locks=0	autoscope=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch_vis_anchorFrame.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

18
OUT
clip_player_locomotion
switch_do_locomotion
clip_player_inplace
vis_anchor
timeOffset_back_transform
clip_player_locomotion1
color1
timeAnchor_back_transform1
attribdelete1
time_Init
pscale_compensation
init_orient
switch_at_origin
reset_P_orient
switch_vis_anchorFrame
init_pscale
remove_instrinsic_transform

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
